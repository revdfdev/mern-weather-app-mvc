{"version":3,"sources":["components/MainContainer/index.js","components/MainContainer/MainContainer.js","api/api.js","store/ducks/search.js","store/ducks/weather.js","store/reducer/index.js","store/saga/index.js","store/index.js","components/SuggestionsListItem/index.js","components/SuggestionsListItem/SuggestionsListItem.js","components/SuggestionsList/index.js","components/SuggestionsList/SuggestionsList.js","components/SearchBar/index.js","components/SearchBar/SearchBar.js","components/Content/index.js","components/Content/Content.js","components/BusLoader/index.js","components/BusLoader/BusLoader.js","components/WeatherContent/index.js","components/WeatherContent/WeatherContent.js","pages/Home/index.js","pages/Home/Home.js","components/BulbError/BulbError.js","components/BulbError/index.js","components/ReactErrorPage/index.js","components/ReactErrorPage/ReactErrorPage.js","components/Root/Root.js","components/Root/index.js","App.js","serviceWorker.js","index.js"],"names":["MainContainer","children","Container","fluid","instance","axios","create","baseURL","process","timeout","headers","query","get","params","cityname","city","handleCitySearch","getAllCititesSaga","CITY_SEARCH_FAILURE","initialState","suggestions","error","isLoading","search","state","action","type","console","log","getCities","a","api","response","searchTerm","cityName","call","data","put","message","takeEvery","handleGetWeatherData","getWeatherDataSaga","weatherInfo","temp","temp_min","temp_max","condition","name","description","icon","errorCode","weather","getWeatherData","weatherData","Math","round","Number","main","status","rootSaga","all","sagaMiddleWare","createSagaMiddleWare","middleware","SuggestionsListItem","suggestion","onSuggestionClick","className","onClick","e","country","SuggestionsList","onItemClicked","map","key","cityId","SearchBar","useState","showDropDown","selectedValue","setState","useSelector","JSON","stringify","dispatch","useDispatch","node","useRef","useEffect","prevState","document","addEventListener","event","current","parentNode","contains","hideDropDown","removeEventListener","ref","placeholder","aria-label","autoComplete","value","onChange","target","length","preventDefault","selected","Content","src","BusLoader","props","background","speed","style","width","height","loop","autoplay","WeatherContent","weatherState","navigate","useNavigate","Home","BulbError","statusCde","renderError","ReactErrorPage","location","useLocation","to","store","preloadedState","createStore","combineReducers","compose","applyMiddleware","run","createRootSaga","Root","path","element","messgae","replace","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b044ddb5.chunk.js","sourcesContent":["import { MainContainer } from './MainContainer';\n\nexport default MainContainer;","import React from 'react';\nimport { Container, Col, Row } from 'reactstrap';\n\n\nexport const MainContainer = ({ children }) => (\n    <Container fluid>\n        {children}\n    </Container>\n)","import axios from 'axios';\n\nconst CITY_PATH = '/api/v1/city/cities';\nconst WEATHER_PATH = '/api/v1/current-weather/city';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL,\n    timeout: 20000,\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default {\n    city: function (query) {\n        return instance.get(CITY_PATH, {\n            params: {\n                ...query\n            }\n        });\n    },\n    weather: function(cityname) {\n        return instance.get(WEATHER_PATH, {\n            params: {\n                city: cityname\n            }\n        })\n    }\n}","import { put, call, takeEvery } from 'redux-saga/effects';\nimport  api from '../../api/api';\n\n//actions\n\nconst CITY_SEARCH = 'weather-test/search/CITY_SEARCH';\nconst CITY_SEARCH_SUCCESSFUL = 'weather-test/search/CITY_SEARCH_SUCCESSFUL';\nconst CITY_SEARCH_FAILURE = 'weather-test/search/CITY_SEARCH_FAILURE';\n\n//state\nconst initialState = {\n    suggestions: [],\n    error: null,\n    isLoading: false\n}\n\n\n//reducer\n\nexport default function search(state={...initialState}, action) {\n    switch(action.type){\n        case CITY_SEARCH_SUCCESSFUL:\n            console.log(action.suggestions)\n            return {\n                ...state,\n                suggestions: action.suggestions,\n                isLoading: false\n            };\n        case CITY_SEARCH_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport function citySearch(searchTerm) {\n    return {\n        type: CITY_SEARCH,\n        searchTerm\n    }\n}\n\nasync function getCities(query) {\n   try {\n       const response = await api.city(query);\n       return response;\n   } catch (error) {\n       throw error;\n   }\n}\n\nfunction* handleCitySearch({ searchTerm }) {\n    console.log(\"handling call\")\n    try {\n        const query = {\n            cityName: searchTerm\n        }\n        const response = yield call(getCities, query);\n        console.log(response.data.data);\n        yield put({ suggestions: response.data.data, type: CITY_SEARCH_SUCCESSFUL});\n    } catch(error) {\n        yield put({ error: error.message, type: CITY_SEARCH_FAILURE });\n    }\n}\n\nexport function* getAllCititesSaga() {\n    yield takeEvery(CITY_SEARCH, handleCitySearch);\n}","import { put, call, takeEvery } from 'redux-saga/effects';\nimport api from '../../api/api';\n\n// actions\nconst GET_WEATHER_INFO = 'weather-test/weather/GET_WEATHER_INFO';\nconst GET_WEATHER_INFO_SUCCESS = 'weather-test/weather/GET_WEATHER_INFO_SUCCESS';\nconst GET_WEATHER_INFO_FAILURE = 'weather-test/weather/GET_WEATHER_INFO_FAILURE';\n\n// state\nconst initialState = {\n    weatherInfo: {\n        cityname: \"\",\n        temp: 0,\n        temp_min: 0,\n        temp_max: 0,\n        condition: {\n            name: '',\n            description: '',\n            icon: \"\"\n        }\n    },\n    isLoading: true,\n    error: null,\n    errorCode: null,\n}\n\nexport default function weather(state={...initialState}, action) {\n    switch(action.type) {\n        case GET_WEATHER_INFO_SUCCESS:\n            const { cityname, temp, temp_min, temp_max, condition } = action.weatherInfo;\n            return {\n                ...state,\n                weatherInfo: {\n                    ...state.weatherInfo,\n                    cityname,\n                    temp,\n                    temp_min,\n                    temp_max,\n                    condition: {\n                        ...state.weatherInfo.condition,\n                        name: condition.name,\n                        description: condition.description,\n                        icon: condition.icon\n                    }\n                },\n                isLoading: false,\n                error: null\n            }\n        case GET_WEATHER_INFO_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                errorCode: action.errorCode,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport function getWeatherInfo(cityname) {\n    return {\n        type: GET_WEATHER_INFO,\n        cityname\n    }\n}\n\nasync function getWeatherData(cityname) {\n    try {\n        const response = await api.weather(cityname);\n        return response;\n    } catch (error) {\n        throw error;\n    }\n}\n\nfunction* handleGetWeatherData({ cityname }) {\n    try {\n        const response = yield call(getWeatherData, cityname);\n        console.log(\"condition\", response.data.data.weather[0].description)\n        const weatherData = {\n            cityname: cityname,\n            temp: Math.round(Number(response.data.data.main.temp) - 273.15),\n            temp_min: Math.round(Number(response.data.data.main.temp_min) - 273.15),\n            temp_max: Math.round(Number(response.data.data.main.temp_max) - 273.15),\n            condition: {\n                name: response.data.data.weather[0].main,\n                description: response.data.data.weather[0].description,\n                icon: `http://openweathermap.org/img/wn/${response.data.data.weather[0].icon}@2x.png`\n            }\n        }\n        yield put({ type: GET_WEATHER_INFO_SUCCESS, weatherInfo: weatherData });\n    } catch (error) {\n        yield put ({ error: error.message, errorCode: error.response.status , type: GET_WEATHER_INFO_FAILURE });\n    }\n}\n\nexport function* getWeatherDataSaga() {\n    yield takeEvery(GET_WEATHER_INFO, handleGetWeatherData)\n}","import { combineReducers } from 'redux';\nimport search from '../ducks/search';\nimport weather from '../ducks/weather';\n\nexport default () => combineReducers({\n    search,\n    weather\n})","import { all } from 'redux-saga/effects';\nimport { getAllCititesSaga } from '../ducks/search';\nimport { getWeatherDataSaga } from '../ducks/weather';\n\n\nexport default function* rootSaga() {\n    yield all([\n        getAllCititesSaga(),\n        getWeatherDataSaga()\n    ]);\n}","import { applyMiddleware, compose, createStore } from 'redux';\nimport createRootReducer  from './reducer';\nimport createRootSaga from './saga';\nimport createSagaMiddleWare from 'redux-saga';\n\nconst sagaMiddleWare = createSagaMiddleWare();\n\nexport const middleware = [sagaMiddleWare];\n\nexport default function configureStore(preloadedState) {\n    const store = createStore(\n        createRootReducer(),\n        preloadedState,\n        compose(applyMiddleware(...middleware))\n    );\n\n    sagaMiddleWare.run(createRootSaga);\n\n    return store;\n}","import { SuggestionsListItem } from './SuggestionsListItem';\n\nexport default SuggestionsListItem;","import React from 'react';\n\nexport const SuggestionsListItem = ({ suggestion, onSuggestionClick }) =>\n    <li className=\"list-group-item custom-dropdown\" onClick={e => {\n        onSuggestionClick(e, suggestion.name);\n    }}>\n        {`${suggestion.name}` + ` - ${suggestion.country}`}\n    </li>\n","import { SuggestionsList } from './SuggestionsList';\n\nexport default SuggestionsList;","import React from 'react';\nimport SuggestionsListItem from '../SuggestionsListItem';\nimport \"./SuggestionList.css\";\n\nexport function SuggestionsList ( { suggestions, onItemClicked } ) {\n\n    return (\n        <div className=\"custom-dropdown-container\">\n            <ul className=\"list-group\">\n                {suggestions.map(suggestion => {\n                    console.log(suggestion);\n                    return (\n                        <SuggestionsListItem key={suggestion.cityId} suggestion={suggestion} onSuggestionClick={onItemClicked} />\n                    )\n                }\n                )}\n            </ul>\n        </div>\n    )\n}\n\n","import { SearchBar } from './SearchBar';\n\nexport default SearchBar;","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { citySearch } from '../../store/ducks/search';\nimport { getWeatherInfo } from '../../store/ducks/weather';\nimport SuggestionsList from '../SuggestionsList';\n\nexport function SearchBar({}) {\n\n    const [state, setState] = useState({\n        showDropDown: false,\n        selectedValue: ''\n    })\n\n    const suggestions = useSelector(state => {\n        console.log(JSON.stringify(state));\n        return state.search.suggestions;\n    });\n\n    const dispatch = useDispatch();\n\n    const node = useRef();\n\n    useEffect(() => {\n\n    }, [suggestions]);\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        console.log(value)\n        setState(prevState => ({\n            ...prevState,\n            selectedValue: value,\n        }));\n        if (value.length >= 3) {\n            dispatch(citySearch(value));\n            showDropDown()\n        }\n    }\n\n    const showDropDown = () => {\n        setState(prevState => ({\n            ...prevState,\n            showDropDown: true\n        }));\n        document.addEventListener('click', (event) => {\n            if (node && node.current && node.current.parentNode.contains(node.current)) {\n                hideDropDown();\n            }\n        })\n    }\n\n    const hideDropDown = () => {\n        setState(prevState => ({\n            ...prevState,\n            showDropDown: false\n        }));\n        document.removeEventListener('clikc', (e) => {});\n    }\n\n    const onItemSelected = (e, selected) => {\n        e.preventDefault();\n        console.log(selected);\n        setState(prevState => ({\n            ...prevState,\n            selectedValue: selected,\n        }));\n        hideDropDown();\n    }\n\n    const onSearchConfirm = (e) => {\n        e.preventDefault();\n        dispatch(getWeatherInfo(state.selectedValue));\n    }\n\n    return (\n        <div className=\"col-md-12\" ref={node}>\n            <div className=\"input-group mb-3\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"Search for the city\"\n                    className=\"form-control\"\n                    aria-label=\"city-input\"\n                    autoComplete=\"off\"\n                    value={state.selectedValue}\n                    onChange={handleChange} />\n\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary btn-md\" onClick={onSearchConfirm}>\n                        Get weather\n                </button>\n                </div>\n            </div>\n            {state.showDropDown && suggestions && suggestions.length > 0 ?\n                <SuggestionsList suggestions={suggestions} onItemClicked={onItemSelected} />\n                : null}\n        </div>\n    )\n}","import { Content } from './Content';\n\nexport default Content","import React from 'react';\nimport \"./Content.css\";\n\nexport function Content({ weatherInfo }) {\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"weather\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <span className=\"icon\">\n                                <img className=\"img-fluid\" src={weatherInfo.condition.icon} />\n                            </span>\n                            <div className=\"title\">\n                                <p>{weatherInfo.cityname}</p>\n                            </div>\n                            <div className=\"temp\">+{weatherInfo.temp}<sup>&deg;</sup>c</div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <div className=\"header\">Condition</div>\n                                    <div className=\"value\">{weatherInfo.condition.name}</div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"header\">Min</div>\n                                    <div className=\"value\">+{weatherInfo.temp_min}<sup>&deg;</sup>c</div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"header\">Max</div>\n                                    <div className=\"value\">+{weatherInfo.temp_max}<sup>&deg;</sup>c</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { BusLoader } from './BusLoader';\nexport default BusLoader;","import React from 'react';\n\nexport const BusLoader  = props => (\n    <div className=\"d-flex justify-content-center\">\n         <lottie-player src=\"https://assets6.lottiefiles.com/packages/lf20_Gg1cd9.json\"  background=\"transparent\"  speed=\"1\"  style={{\n                                width: \"300px\", height: \"300px\"}}  loop autoplay></lottie-player>\n    </div>\n)\n","import { WeatherContent } from './WeatherContent'\nexport default WeatherContent;","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Content from '../Content';\nimport BusLoader from '../BusLoader';\nimport { useNavigate } from 'react-router-dom';\n\nexport function WeatherContent() {\n\n    const weatherState = useSelector(state => state.weather);\n\n    const navigate = useNavigate();\n\n    if (weatherState.error !== null) {\n        const state = {\n            errorCode: weatherState.errorCode,\n            error: weatherState.error\n        };\n        navigate(`/${weatherState.errorCode}`, {\n            state\n        });\n    }\n\n    useEffect(() => {\n    }, [weatherState]);\n\n    return (\n        <div>\n            {weatherState.isLoading || weatherState.weatherInfo.cityname === '' ? <BusLoader /> : <Content weatherInfo={weatherState.weatherInfo} />}\n        </div>\n    )\n}","import { Home } from './Home';\n\nexport default Home;","import React, { useState, useEffect } from 'react'\nimport SearchBar from '../../components/SearchBar';\nimport WeatherContent from '../../components/WeatherContent';\n\n\nexport function Home({  }) {\n\n    return (\n        <>\n            <SearchBar />\n            <WeatherContent />\n        </>\n    )\n}","import React from 'react';\nimport \"./BulbError.css\";\n\nfunction renderError(statusCde) {\n    switch(statusCde) {\n        case 400:\n            return(\n                <lottie-player src=\"https://assets7.lottiefiles.com/datafiles/mVuaYzsV6mwoEwK/data.json\" background=\"transparent\" style={{\n                                height: \"300px\"}} speed=\"1\" autoplay></lottie-player>\n            )\n        case 404:\n            return(\n                <lottie-player src=\"https://assets3.lottiefiles.com/packages/lf20_IXf5MX.json\" background=\"transparent\" style={{\n                                height: \"300px\"}} speed=\"1\" autoplay></lottie-player>\n            )\n        case 500:\n            return (\n                <lottie-player src=\"https://assets10.lottiefiles.com/packages/lf20_1e0yPa.json\" background=\"transparent\" style={{\n                                height: \"300px\"}} speed=\"1\" autoplay></lottie-player>\n            )\n\n        default:\n            return (\n                <lottie-player src=\"https://assets2.lottiefiles.com/packages/lf20_Wq9UHU.json\" background=\"transparent\" style={{\n                                height: \"300px\"}} speed=\"1\" autoplay></lottie-player>\n            )\n\n    }\n}\n\nexport const BulbError = ({ errorCode, error }) => (\n    <div className=\"d-flex justify-content-center\">\n            <div className=\"col-md-12\">\n                <div className=\"lottie\">\n                    {renderError(errorCode)}\n                </div>\n            </div>\n    </div>\n)\n","import { BulbError } from './BulbError';\n\nexport default BulbError;","import { ReactErrorPage } from './ReactErrorPage';\n\nexport default ReactErrorPage;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport BulbError from '../BulbError';\n\n\nexport function ReactErrorPage (props) {\n\n    const location = useLocation();\n\n    const { error, errorCode } = location.state;\n\n    console.log(\"Props\", location);\n\n    return (\n        <div className=\"error-template\">\n            <BulbError error={error} errorCode={errorCode} />\n            <div className=\"error-details\">\n                {error}\n            </div>\n            <div className=\"error-actions\">\n                <Link to=\"/\" className=\"btn btn-primary btn-lg\">\n                    <span className=\"glyphicon glyphicon-home\">\n                    </span>\n                    Take me home\n                </Link>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport MainContainer from '../MainContainer';\nimport { Provider } from 'react-redux';\nimport createStore from '../../store';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Home from '../../pages/Home/';\nimport ReactErrorPage from '../ReactErrorPage';\n\nconst store = createStore();\n\nexport function Root () {\n    return (\n            <Provider store={store}>\n                <MainContainer>\n                    <Router>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n                            <Route path=\"/400\">\n                                <ReactErrorPage errorCode={400} error={ { message: \"Request body not proper\" } }/>\n                            </Route>\n                            <Route path=\"/404\">\n                                <ReactErrorPage errorCode={404} error={{ messgae: \"Page not found\" }} />\n                            </Route>\n                            <Route path=\"/500\">\n                                <ReactErrorPage errorCode={500} error={{ message: \"Server failure\" }} />\n                            </Route>\n                            <Route path=\"*\" element={\n                                <Navigate to=\"/404\" replace />\n                            }/>\n                        </Routes>\n                    </Router>\n                </MainContainer>\n            </Provider>\n    )\n}","import { Root } from './Root';\n\nexport default Root;","import React from 'react';\nimport Root from './components/Root';\n\nconst App = props => <Root {...props} />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}